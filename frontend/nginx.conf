# /etc/nginx/conf.d/default.conf
server {
  listen 80;
  server_name _;

  # ---- Serve SPA ----
  root /usr/share/nginx/html;
  index index.html;

  # Cache immutable assets aggressively (filenames have hashes in Vite builds)
  location ~* \.(?:js|mjs|css|woff2?|ttf|eot|otf|png|jpg|jpeg|gif|svg|ico)$ {
    access_log off;
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # App shell / client-side routing
  location / {
    try_files $uri /index.html;
  }

  # ---- Same-origin API proxy â†’ FastAPI ----
  # Frontend should call `/api/...` (whether or not you also keep VITE_BACKEND_URL).
  location /api/ {
    # If using docker-compose, this uses the backend service name on the compose network:
    proxy_pass http://backend:8000/;

    # If calling a direct URL instead, swap the line above with:
    # proxy_pass http://host.docker.internal:8000/;   # macOS/Windows Docker
    # proxy_pass http://127.0.0.1:8000/;              # Linux host

    proxy_http_version 1.1;

    # Forward client info
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # ---- SSE friendliness ----
    # Do NOT buffer; keep the stream open a long time.
    proxy_set_header Connection '';
    proxy_buffering off;
    proxy_cache off;
    proxy_read_timeout 1h;
    proxy_send_timeout 1h;

    # Optional: increase buffers if you ever stream larger chunks
    # proxy_buffers 8 16k;
    # proxy_buffer_size 16k;
  }

  # ---- Basic security headers (tune as needed) ----
  add_header X-Content-Type-Options nosniff always;
  add_header X-Frame-Options SAMEORIGIN always;
  add_header Referrer-Policy strict-origin-when-cross-origin always;
  # For CSP, start relaxed and tighten later if you inline scripts/styles:
  # add_header Content-Security-Policy "default-src 'self'; img-src 'self' data:; connect-src 'self' https: http:; script-src 'self'; style-src 'self' 'unsafe-inline'" always;

  # ---- Gzip (optional but helpful) ----
  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/xml+rss image/svg+xml;
  gzip_min_length 1024;
}
